syntax="proto3";

package pb;

import "google/api/annotations.proto";
import "rpc_user.proto";
import "rpc_account.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/claytten/golang-simplebank/pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Golang SimpleBank API";
    version: "1.0.2";
    contact: {
      name: "Claytten";
      url: "https://github.com/claytten";
      email: "wahyuajisulaiman@gmail.com";
    };
  };
  security_definitions: {
    security: {
      key: "Bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by Bearer: Bearer <token>"
      }
    }
  }
  security: {
    security_requirement: {
      key: "Bearer"
    }
  }
};

service Simplebank {
  // users
  rpc LoginUser(LoginUserRequest) returns (LoginUserResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/login"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to login new session";
      summary: "Login user";
      security: { } // Disable security key
    };
  }

  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/create"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to create a new user";
      summary: "Create new user";
      security: { } // Disable security key
    };
  }

  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      get: "/api/v1/auth/getUser"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to get a user";
      summary: "Get User";
    };
  }

  rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse) {
    option (google.api.http) = {
      patch: "/api/v1/auth/profile"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to update a user profile";
      summary: "Update user profile";
    };
  }

  rpc UpdatePassword(UpdatePasswordRequest) returns (UpdatePasswordResponse) {
    option (google.api.http) = {
      patch: "/api/v1/auth/profile/password"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to update a user password";
      summary: "Update user password";
    };
  }

  rpc RenewToken(RenewTokenRequest) returns (RenewTokenResponse) {
    option (google.api.http) = {
      post: "/api/v1/auth/renew-token"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to renew token user";
      summary: "Renew token user";
    };
  }

  //Account
  rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse) {
    option (google.api.http) = {
      post: "/api/v1/account/create"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to create a new account";
      summary: "Create new account";
    };
  }

  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse) {
    option (google.api.http) = {
      get: "/api/v1/account/getAccount"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to get an account";
      summary: "Get Account";
    };
  }

  rpc UpdateAccount(UpdateAccountRequest) returns (UpdateAccountResponse) {
    option (google.api.http) = {
      patch: "/api/v1/account/update"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to update an account balance";
      summary: "Update account balance";
    };
  }

  rpc DeleteAccount(DeleteAccountRequest) returns (DeleteAccountResponse) {
    option (google.api.http) = {
      delete: "/api/v1/account/delete"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to delete an account";
      summary: "Delete account";
    };
  }

  rpc TransferTxAccount(TransferTxAccountRequest) returns (TransferTxAccountResponse) {
    option (google.api.http) = {
      post: "/api/v1/account/transfer"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Use this API to create new transaction between two accounts";
      summary: "Transfer between two accounts";
    };
  }
}