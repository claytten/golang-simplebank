# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Run unit tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Testing All Packages
    runs-on: ubuntu-latest
    environment: development
    env:
      ENVIRONMENT: ${{ vars.ENVIRONMENT }}
      DB_SOURCE: ${{ vars.DB_SOURCE }}
      DB_DRIVER: ${{ vars.DB_DRIVER }}
      HTTP_SERVER_ADDRESS: ${{ vars.HTTP_SERVER_ADDRESS }}
      GRPC_SERVER_ADDRESS: ${{ vars.GRPC_SERVER_ADDRESS }}
      TOKEN_SYMMETRIC_KEY: ${{ secrets.TOKEN_SYMMETRIC_KEY }}
      ACCESS_TOKEN_DURATION: ${{ vars.ACCESS_TOKEN_DURATION }}
      REFRESH_TOKEN_DURATION: ${{ vars.REFRESH_TOKEN_DURATION }}
    services:
      postgres:
        image: postgres:12.13-alpine3.17
        env:
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - uses: actions/checkout@v3
    - name: Setup .env on testing
      run: |
        echo "ENVIRONMENT=$ENVIRONMENT" >> app.env
        echo "DB_SOURCE=$DB_SOURCE" >> app.env
        echo "DB_DRIVER=$DB_DRIVER" >> app.env
        echo "HTTP_SERVER_ADDRESS=$HTTP_SERVER_ADDRESS" >> app.env
        echo "GRPC_SERVER_ADDRESS=$GRPC_SERVER_ADDRESS" >> app.env
        echo "TOKEN_SYMMETRIC_KEY=$TOKEN_SYMMETRIC_KEY" >> app.env
        echo "ACCESS_TOKEN_DURATION=$ACCESS_TOKEN_DURATION" >> app.env
        echo "REFRESH_TOKEN_DURATION=$REFRESH_TOKEN_DURATION" >> app.env
    - uses: szenius/set-timezone@v1.0
      with:
        timezoneLinux: "Asia/Jakarta"
        timezoneMacos: "Asia/Jakarta"
        timezoneWindows: "Jakarta Standard Time"

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Installing Dependencies
      run: go mod tidy

    - name: Install golang-migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.15.2/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate /usr/local/bin
        which migrate
    
    - name: Run migrations
      run: migrate -path ./migration -database "${{ vars.DB_SOURCE }}" -verbose up

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v -cover ./...
